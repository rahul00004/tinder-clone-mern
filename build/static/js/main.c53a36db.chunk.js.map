{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAqBeA,MAhBf,WACI,OACI,sBAAKC,UAAU,SAAf,UAEI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAGvC,qBAAKG,IAAI,mEAAmEC,IAAI,GAAGJ,UAAU,gBAC9F,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,kECTlCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAQ,4CCkDGC,MAhDf,WAAwB,IAAD,EACMC,mBAAS,IADf,mBACZC,EADY,KACLC,EADK,KAoBnB,OAlBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,iBADhC,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADY,uBAAC,WAAD,wBAKZC,KAED,IAYC,qBAAKlB,UAAU,cAAf,SACI,qBAAKA,UAAU,4BAAf,SACKW,EAAOQ,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAapB,UAAU,QAEvBqB,aAAc,CAAC,KAAK,QACnBC,QAAS,SAACC,GAAD,OAhBCC,EAgBiBJ,EAAOK,UAf9CC,QAAQC,IAAI,WAAaH,GADd,IAAWA,GAiBVI,iBAAkB,kBAbhBH,EAa+BL,EAAOK,UAZpDC,QAAQC,IAAIF,EAAK,mBADJ,IAACA,GASH,SAMK,qBACQI,MAAO,CACHC,gBAAgB,OAAD,OAAQV,EAAOW,OAAf,MAEf/B,UAAU,OAJtB,SAMQ,6BAAKoB,EAAOK,UAXpBL,EAAOK,c,6FCEhBO,MAxBf,WACI,OACI,sBAAKhC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,oBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCPvB+B,MAXf,WACE,OACE,sBAAKjC,UAAU,MAAf,UAEC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCAUkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c53a36db.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ForumIcon from '@material-ui/icons/Forum'\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <IconButton>\r\n            <PersonIcon fontSize=\"large\" className=\"header_icon\" />\r\n            </IconButton>\r\n           \r\n            <img src='https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png' alt=\"\" className=\"header_logo\"/>\r\n           <IconButton>\r\n           <ForumIcon fontSize=\"large\" className=\"header_icon\"/> \r\n           </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://tinder-backend252.herokuapp.com'\r\n})\r\n\r\nexport default instance;","import React,{useState,useEffect} from 'react'\r\nimport './TinderCards.css'\r\nimport TinderCard from 'react-tinder-card'\r\nimport axios from './axios'\r\n\r\nfunction TinderCards() {\r\n    const [people,setPeople]=useState([])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const req = await axios.get('/tinder/cards')\r\n            setPeople(req.data)\r\n        }\r\n        fetchData()\r\n        \r\n    }, [])\r\n\r\n    const swiped = (direction,nameToDelete)=>{\r\n        console.log('removing' + nameToDelete);\r\n\r\n    }\r\n    const outOfFrame=(name)=>{\r\n        console.log(name+\"left the screen\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"TinderCards\">\r\n            <div className=\"tinderCards_cardcontainer\">\r\n                {people.map((person)=>(\r\n                   <TinderCard  className=\"swipe\"\r\n                   key={person.name}\r\n                   preventSwipe={[\"up\",\"down\"]}\r\n                    onSwipe={(dir)=>swiped(dir,person.name)} \r\n                    onCardLeftScreen={()=>outOfFrame(person.name)} \r\n                    >\r\n                        <div\r\n                                style={{\r\n                                    backgroundImage:`url(${person.imgUrl})`\r\n                                    \r\n                                }}  className=\"card\" >\r\n                                     \r\n                                <h3>{person.name}</h3>\r\n\r\n                        </div>\r\n\r\n                   </TinderCard>\r\n                ))}\r\n          </div>      \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards\r\n","import React from 'react'\r\nimport './SwipeButtons.css'\r\nimport ReplayIcon from \"@material-ui/icons/Replay\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons_repeat\">\r\n                <ReplayIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_left\">\r\n                <CloseIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_star\">\r\n                <StarRateIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_right\">\r\n                <FavoriteIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons_lightning\">\r\n                <FlashOnIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n             \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","\nimport './App.css';\nimport Header from './Header.js'\nimport TinderCards from './TinderCards'\nimport  SwipeButtons from './SwipeButtons.js'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n     <Header/>\n     <TinderCards/>\n     <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}